题目链接：https://leetcode.cn/problems/pascals-triangle/submissions/

给定一个非负整数 numRows，生成「杨辉三角」的前 numRows 行。
在「杨辉三角」中，每个数是它左上方和右上方的数的和

示例 1:
输入: numRows = 5
输出: [[1],[1,1],[1,2,1],[1,3,3,1],[1,4,6,4,1]]

示例 2:
输入: numRows = 1
输出: [[1]]

算法思想：比较简单，需要背会，利用vector容器，模拟二维数组，设置行数，在设置每一行元素的个数，

class Solution {
public:
    vector<vector<int>> generate(int numRows) {
        vector<vector<int>> ans;

        //设置二维数组的行数
        ans.resize(numRows);
        
        for(int i = 0; i < ans.size();i++)
        {
            ans[i].resize(i + 1);//设置二维数组中每一行元素的个数
        }
            
        for(int i = 0;i < ans.size();i++)
        {
            for(int j = 0;j < ans[i].size();j++)
            {
                if(j == 0 || j ==i)//每行的首尾元素为1
                {
                    ans[i][j] = 1;
                }
                else
                {
                    ans[i][j] = ans[i - 1][j] + ans[i - 1][j - 1];
                }
            }
        }
        return ans;

    }
};
